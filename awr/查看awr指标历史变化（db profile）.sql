DECLARE
  CURSOR C_SNAP IS
    SELECT SNAP_ID, BEGIN_INTERVAL_TIME
      FROM DBA_HIST_SNAPSHOT
     WHERE INSTANCE_NUMBER = 2
       AND BEGIN_INTERVAL_TIME >
           TO_DATE('2018-12-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
     ORDER BY SNAP_ID;
  V_SNAP_ID   NUMBER;
  V_SNAP_TIME DATE;
  V_DBTIME    VARCHAR2(20);
  V_DBCPU     VARCHAR2(20);
BEGIN

  DBMS_OUTPUT.PUT_LINE('DATETIME,DB_TIME_HOUR,DB_CPU_HOUR');

  OPEN C_SNAP;
  LOOP
    BEGIN
      FETCH C_SNAP
        INTO V_SNAP_ID, V_SNAP_TIME;
    
      SELECT ROUND(NVL((E.VALUE - S.VALUE), -1) / 60 / 1000000, 2)
        INTO V_DBTIME
        FROM DBA_HIST_SYS_TIME_MODEL S, DBA_HIST_SYS_TIME_MODEL E
       WHERE S.SNAP_ID = V_SNAP_ID
         AND E.SNAP_ID = V_SNAP_ID + 1
         AND E.DBID = S.DBID
         AND E.INSTANCE_NUMBER = S.INSTANCE_NUMBER
         AND E.INSTANCE_NUMBER = 2
         AND S.STAT_NAME = 'DB time'
         AND E.STAT_ID = S.STAT_ID;
    
      SELECT ROUND(NVL((E.VALUE - S.VALUE), -1) / 60 / 1000000, 2)
        INTO V_DBCPU
        FROM DBA_HIST_SYS_TIME_MODEL S, DBA_HIST_SYS_TIME_MODEL E
       WHERE S.SNAP_ID = V_SNAP_ID
         AND E.SNAP_ID = V_SNAP_ID + 1
         AND E.DBID = S.DBID
         AND E.INSTANCE_NUMBER = S.INSTANCE_NUMBER
         AND E.INSTANCE_NUMBER = 2
         AND S.STAT_NAME = 'DB CPU'
         AND E.STAT_ID = S.STAT_ID;
    
      DBMS_OUTPUT.PUT_LINE(TO_CHAR(V_SNAP_TIME, 'YYYY-MM-DD HH24:MI:SS') || ',' ||
                           ROUND(V_DBTIME / 60, 2) || ',' ||
                           ROUND(V_DBCPU / 60, 2));
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        NULL;
      
    END;
    EXIT WHEN C_SNAP%NOTFOUND;
  
  END LOOP;
  CLOSE C_SNAP;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;
  
END;
